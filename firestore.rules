rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================
    // HELPER FUNCTIONS
    // ============================================
    
    // Check if user is authenticated (either Firebase Auth or has a user document)
    function isSignedIn() {
      return request.auth != null || exists(/databases/$(database)/documents/users/$(request.resource.id));
    }
    
    // Check if the requesting user owns the resource
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Check if user is a member of a group
    function isGroupMember(groupId) {
      return exists(/databases/$(database)/documents/groups/$(groupId)) &&
             request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
    }
    
    // Check if user is the creator of a group
    function isGroupCreator(groupId) {
      return exists(/databases/$(database)/documents/groups/$(groupId)) &&
             get(/databases/$(database)/documents/groups/$(groupId)).data.creator == /databases/$(database)/documents/users/$(request.auth.uid);
    }
    
    // ============================================
    // USERS COLLECTION
    // ============================================
    match /users/{userId} {
      // Anyone can read user profiles (needed for displaying member info)
      allow read: if true;
      
      // Users can create their own profile during signup
      allow create: if true;
      
      // Users can update their own profile
      // Admin SDK has automatic access (server-side)
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Only allow delete via Admin SDK (no client-side deletes)
      allow delete: if false;
    }
    
    // ============================================
    // GROUPS COLLECTION
    // ============================================
    match /groups/{groupId} {
      // Anyone can read groups (needed for matching and viewing)
      allow read: if true;
      
      // Any authenticated user can create a group
      allow create: if request.auth != null || true; // Allow for users without Firebase Auth
      
      // Group creators and members can update
      // Admin SDK has automatic access (server-side)
      allow update: if true; // Permissive for now due to localStorage auth
      
      // Only allow delete via Admin SDK
      allow delete: if false;
      
      // Subcollection: swipes (pass/like decisions)
      match /swipes/{swipeId} {
        allow read, write: if true; // Users need to record swipe decisions
      }
    }
    
    // ============================================
    // MATCHES COLLECTION
    // ============================================
    match /matches/{matchId} {
      // Anyone can read matches (needed for chat and match viewing)
      allow read: if true;
      
      // Any authenticated user can create a match
      allow create: if true;
      
      // Matches can be updated by participants
      allow update: if true;
      
      // Only allow delete via Admin SDK
      allow delete: if false;
    }
    
    // ============================================
    // MESSAGES COLLECTION (Chat messages)
    // ============================================
    match /messages/{messageId} {
      // Anyone can read messages (within their match context)
      allow read: if true;
      
      // Any authenticated user can create messages
      allow create: if true;
      
      // No updates to messages
      allow update: if false;
      
      // Only allow delete via Admin SDK
      allow delete: if false;
    }
    
    // ============================================
    // INVITATIONS COLLECTION
    // ============================================
    match /invitations/{invitationId} {
      // Anyone can read invitations (group admins need to see them)
      allow read: if true;
      
      // Any authenticated user can create invitations
      allow create: if true;
      
      // Invitations can be updated (accept/reject)
      allow update: if true;
      
      // Invitations can be deleted
      allow delete: if true;
    }
    
    // ============================================
    // REPORTS COLLECTION
    // ============================================
    match /reports/{reportId} {
      // Only allow reading via Admin SDK or by group creators
      allow read: if true; // Permissive for now
      
      // Any user can create a report
      allow create: if true;
      
      // Only allow update/delete via Admin SDK
      allow update, delete: if false;
    }
    
    // ============================================
    // NEIGHBORHOODS COLLECTION
    // ============================================
    match /neighborhoods/{neighborhoodId} {
      // Anyone can read neighborhoods
      allow read: if true;
      
      // Only allow create/update/delete via Admin SDK
      allow write: if false;
    }
    
    // ============================================
    // VIBES COLLECTION
    // ============================================
    match /vibes/{vibeId} {
      // Anyone can read vibes
      allow read: if true;
      
      // Only allow create/update/delete via Admin SDK
      allow write: if false;
    }
    
    // ============================================
    // VENUES COLLECTION
    // ============================================
    match /venues/{venueId} {
      // Anyone can read venues
      allow read: if true;
      
      // Only allow create/update/delete via Admin SDK
      allow write: if false;
    }
    
    // ============================================
    // VOTES COLLECTION (Democracy mode)
    // ============================================
    match /votes/{voteId} {
      // Anyone can read votes
      allow read: if true;
      
      // Any authenticated user can create a vote
      allow create: if true;
      
      // No updates or deletes to votes
      allow update, delete: if false;
    }
    
    // ============================================
    // DEFAULT: DENY ALL OTHER ACCESS
    // ============================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
